import numpy as np
import joblib
from sklearn.preprocessing import StandardScaler
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
from pydantic import BaseModel

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # "*" allows all origins (change this to your domain in production)
    allow_methods=["*"],  # "*" allows all HTTP methods
    allow_headers=["*"],  # "*" allows all headers
    # allow_credentials=True,
)


class PredictionInput(BaseModel):
    file_size: str
    header_size: str

# Load the trained model and scaler
loaded_model = joblib.load('random_forest_model.joblib')
scaler = joblib.load('standard_scaler.joblib')

@app.post("/predict")
async def predict(input_data: PredictionInput):
    print(input_data.file_size)
    # Transform user inputs using the scaler
    user_input = scaler.transform(np.array([[input_data.file_size, input_data.header_size]]))

    # Make predictions based on the user inputs
    prediction = loaded_model.predict(user_input)
    if prediction[0] == 0:
        return {"Predicted_class": "Not Malware"}
    else:
        return {"Predicted_class": "Malware"}

if __name__ == "__main__":
    uvicorn.run("main:app", host="127.0.0.1",port=5000, log_level="info")